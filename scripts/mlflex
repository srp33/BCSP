#!/bin/bash

## Initialize ML-Flex 
#cp -v misc/*.arff ML-Flex/InputData/
#cp misc/*AlgorithmParameters.txt ML-Flex/Config/
#cp clinical/utah.samples.txt ML-Flex/Experiments/
#cp clinical/ontario1.samples.txt ML-Flex/Experiments/
#cp clinical/ontario2.samples.txt ML-Flex/Experiments/ontario2.samples.temp.txt
#  
## ontario2 sample names have periods, so converting to hyphens
#sed s/\\./-/g ML-Flex/Experiments/ontario2.samples.temp.txt > ML-Flex/Experiments/ontario2.samples.txt
#rm ML-Flex/Experiments/ontario2.samples.temp.txt

function addExperiment {
  execFile=$1
  experimentTemplateFile="$2"
  experimentName="$3"
  dataFile="$4"
  genesToSelectFile="$5"
  doRandomGeneSelection="$6"
  iteration="$7"
  mem="$8"
  threads="$9"
  resultDirName="${10}"

  resultDir=`pwd`/ML-Flex_results/$resultDirName/${experimentName}/Iteration${iteration}

  if [ ! -f $resultDir/Overall_Results_Matrix.txt ]
  then
    echo ./ML-Flex.script "$experimentTemplateFile" "$experimentName" "$dataFile" "$genesToSelectFile" "$doRandomGeneSelection" "$iteration" "$mem" "$threads" "$resultDir" >> $execFile
    #qsub ML-Flex.script -v experimentTemplateFile="$experimentTemplateFile",experimentName="$experimentName",dataFile="$dataFile",genesToSelectFile="$genesToSelectFile",doRandomGeneSelection=$doRandomGeneSelection,iteration="$iteration",mem=$mem,threads=$threads,resultDir="$resultDir"
  fi
}

mkdir -p ML-Flex_results

#runExperiment utahontario1 100g 11
#runExperiment utahontario2 100g 11
#runExperiment "utahontario1_KEGG" 100g 11
#runExperiment "utahontario2_KEGG" 100g 11
#runExperiment "utahontario1_REACTOME" 100g 11
#runExperiment "utahontario2_REACTOME" 100g 11
#runExperiment "utahontario1_BIOCARTA" 100g 11
#runExperiment "utahontario2_BIOCARTA" 100g 11
#runExperiment "utahontario1_SPathways" 100g 11
#runExperiment "utahontario2_SPathways" 100g 11
#runExperiment "utahontario1_Permuted_SPathways" 100g 11
#runExperiment utahontario1_RepeatA 100g 11
#runExperiment utahontario1_Permute 100g 11
#runExperiment utahontario1_Random 100g 11
#runExperiment utahontario1_Exclude 100g 11
#runExperiment utahontario2_RepeatA 100g 11
#runExperiment utahontario2_Permute 100g 11
#runExperiment utahontario2_Random 100g 11
#runExperiment utahontario2_Exclude 100g 11

export -f addExperiment

#mkdir -p tempexec
#rm -f tempexec/*

#for iteration in {1..1000}
##for iteration in {1..3}
#do
#  echo $iteration
#
#  permutedExecFile=tempexec/iteration${iteration}
#
#  if [ -f $permutedExecFile ]
#  then
#    continue
#  fi
#
#  rm -f $permutedExecFile
#  touch $permutedExecFile
#  chmod 777 $permutedExecFile
#
#  #for geneSetFile in genesets/*
#  #for geneSetFile in genesets/KEGG_CELL_ADHESION_MOLECULES_CAMS.gene.ids.txt genesets/REACTOME_INTEGRIN_CELL_SURFACE_INTERACTIONS.gene.ids.txt
#  for geneSetFile in KEGG_SMALL_CELL_LUNG_CANCER KEGG_PEROXISOME BIOCARTA_DREAM_PATHWAY KEGG_PHOSPHATIDYLINOSITOL_SIGNALING_SYSTEM BIOCARTA_BCR_PATHWAY REACTOME_FORMATION_OF_PLATELET_PLUG REACTOME_CELL_DEATH_SIGNALLING_VIA_NRAGE_NRIF_AND_NADE KEGG_ARRHYTHMOGENIC_RIGHT_VENTRICULAR_CARDIOMYOPATHY_ARVC BIOCARTA_AT1R_PATHWAY KEGG_PATHWAYS_IN_CANCER BIOCARTA_STRESS_PATHWAY KEGG_CELL_ADHESION_MOLECULES_CAMS BIOCARTA_CELL2CELL_PATHWAY KEGG_OSTEOCLAST_DIFFERENTIATION REACTOME_PLATELET_DEGRANULATION REACTOME_RNA_POLYMERASE_I_PROMOTER_CLEARANCE KEGG_CYTOKINE_CYTOKINE_RECEPTOR_INTERACTION KEGG_FC_EPSILON_RI_SIGNALING_PATHWAY BIOCARTA_PYK2_PATHWAY REACTOME_FANCONI_ANEMIA_PATHWAY BIOCARTA_EGFR_SMRTE_PATHWAY KEGG_PROGESTERONE_MEDIATED_OOCYTE_MATURATION REACTOME_SIGNALING_IN_IMMUNE_SYSTEM KEGG_VIBRIO_CHOLERAE_INFECTION KEGG_TRYPTOPHAN_METABOLISM KEGG_CALCIUM_SIGNALING_PATHWAY KEGG_FRUCTOSE_AND_MANNOSE_METABOLISM REACTOME_ACTIVATION_OF_NMDA_RECEPTOR_UPON_GLUTAMATE_BINDING_AND_POSTSYNAPTIC_EVENTS REACTOME_PLATELET_ACTIVATION REACTOME_G_ALPHA_I_SIGNALLING_EVENTS BIOCARTA_G2_PATHWAY KEGG_CITRATE_CYCLE_TCA_CYCLE REACTOME_HEMOSTASIS REACTOME_MRNA_SPLICING_MINOR_PATHWAY REACTOME_TRIACYLGLYCERIDE_BIOSYNTHESIS KEGG_GLIOMA REACTOME_P75_NTR_RECEPTOR_MEDIATED_SIGNALLING KEGG_FOCAL_ADHESION KEGG_CHEMOKINE_SIGNALING_PATHWAY KEGG_PYRIMIDINE_METABOLISM REACTOME_INTEGRIN_CELL_SURFACE_INTERACTIONS REACTOME_GLUCOSE_REGULATION_OF_INSULIN_SECRETION BIOCARTA_TPO_PATHWAY BIOCARTA_RELA_PATHWAY BIOCARTA_CBL_PATHWAY REACTOME_LOSS_OF_NLP_FROM_MITOTIC_CENTROSOMES KEGG_JAK_STAT_SIGNALING_PATHWAY KEGG_LEUKOCYTE_TRANSENDOTHELIAL_MIGRATION KEGG_MELANOMA REACTOME_MITOCHONDRIAL_FATTY_ACID_BETA_OXIDATION
#  do
#    geneSet=`basename $geneSetFile`
#    geneSet=${geneSet/\.gene\.ids\.txt/}
#    geneSet=${geneSet/\:/_}
#
#geneSetFile=genesets/$geneSet.gene.ids.txt
#
#    #for dataIndex in 1 2
#    for dataIndex in 1
#    do
#      #addExperiment $normalExecFile misc/GeneSet_Experiment_Template_FeatureSelection_${dataIndex}.txt utahontario${dataIndex}_${geneSet}_FeatureSelection matrices/utahontario${dataIndex}.batch.txt $geneSetFile NO $iteration 6g 1 utahontario${dataIndex}_Pathways_FeatureSelection
#      addExperiment $permutedExecFile misc/GeneSet_Permuted_Experiment_Template_FeatureSelection_${dataIndex}.txt utahontario${dataIndex}_Permuted_${geneSet}_FeatureSelection matrices/utahontario${dataIndex}.batch.txt $geneSetFile NO $iteration 6g 1 utahontario${dataIndex}_Permuted_Pathways_FeatureSelection
#    done
#  done
#done

seq 1 100 | parallel --max-procs 10 tempexec/iteration{}

#rm -f tempexec/*Visvader*

#for geneSetFile in genesets/*
#for geneSetFile in genesets/KEGG_CELL_ADHESION_MOLECULES_CAMS.gene.ids.txt genesets/REACTOME_INTEGRIN_CELL_SURFACE_INTERACTIONS.gene.ids.txt
#do
#  geneSet=`basename $geneSetFile`
#  geneSet=${geneSet/\.gene\.ids\.txt/}
#  geneSet=${geneSet/\:/_}
#
#  for selectionType in FeatureSelection
#  do
#    normalExecFile=tempexec/${geneSet}_Visvader_${selectionType}_normal
#    permutedExecFile=tempexec/${geneSet}_Visvader_${selectionType}_permuted
#
#    if [ -f $permutedExecFile ]
#    then
#      continue
#    fi
#
#    rm -f $normalExecFile $permutedExecFile
#    touch $normalExecFile $permutedExecFile
#    chmod 777 $normalExecFile $permutedExecFile
#
#    #for iteration in {1..1000}
#    for iteration in {1..1}
#    do
#      addExperiment $normalExecFile misc/GeneSet_Experiment_Template_Visvader_${selectionType}.txt Visvader_${geneSet}_${selectionType} matrices/Visvader.txt $geneSetFile NO $iteration 12g 1 Visvader_Pathways_${selectionType}
#      addExperiment $permutedExecFile misc/GeneSet_Permuted_Experiment_Template_Visvader_${selectionType}.txt Visvader_Permuted_${geneSet}_${selectionType} matrices/Visvader.txt $geneSetFile NO $iteration 12g 1 Visvader_Permuted_Pathways_${selectionType}
#    done
#  done
#done

#for scriptName in tempexec/*Visvader*
#do
#  qsub Kickoff.script -v scriptName=$scriptName
#done

#for i in 1 2
#do
#  outDir=../results/Pathway_Predictions_Permuted_utahontario${i}
#  outTrainingDir=${outDir}_Training
#  mkdir -p $outDir $outTrainingDir
#  rm -f $outDir/* $outTrainingDir/*
#  python2 ../code/ParseMLFlexResults.py "Output2/utahontario${i}*Matrix.txt" "utahontario${i}_,_weka_svm_weights_r_svm_rbf" FALSE $outDir
#  python2 ../code/ParseMLFlexResults.py "Output2/utahontario${i}*Matrix.txt" "utahontario${i}_,_weka_svm_weights_r_svm_rbf" TRUE $outTrainingDir
#done



####################################################################
# Validation
####################################################################

cd ..

# Create ARFF file with batch information for validation
#tail -n +2 ~/Pipeline/clinical/BatchInfo.txt > tmp1
#python2 code/SelectColumns.py tmp1 0,2 tmp2
#python2 code/InsertMatrixColumnViaExpression.py tmp2 "'Batch' + x[1]"
#python2 code/SelectColumns.py tmp2 0,2 tmp1
#python2 code/CreateArff.py None tmp1 None True misc/classes.batch.arff
#rm tmp1 tmp2

archiveDir=/fslhome/srp33/fsl_archive/ML-Flex
#cp $archiveDir/Guts/SelectedFeatures/utahontario1Experiment/Iteration1/utahontario1/weka_svm_weights/OuterFold1/OuterFold_SelectedFeatures.txt results/utahontario1_SelectedGenes.txt
#cp $archiveDir/Guts/SelectedFeatures/utahontario2Experiment/Iteration1/utahontario2/weka_svm_weights/OuterFold1/OuterFold_SelectedFeatures.txt results/utahontario2_SelectedGenes.txt

function selectGenes {
  dataFile=$1
  genesFile=$2
  numGenes=$3
  outArffFile=$4

  python2 code/ConvertCommasToNewLines.py $genesFile
  head -n $numGenes $genesFile > tmp1
  python2 code/FilterFileByColumnValues.py $dataFile 0 tmp1 1 tmp2

  python2 code/CreateArff.py tmp2 clinical/combined.Batch.txt None True $outArffFile

  rm tmp1 tmp2
}

#selectGenes matrices/utahontario1.batch.txt results/utahontario1_SelectedGenes.txt 125 ML-Flex/InputData/utahontario1.SelectedGenes.batch.arff
#selectGenes matrices/utahontario2.batch.txt results/utahontario2_SelectedGenes.txt 225 ML-Flex/InputData/utahontario2.SelectedGenes.batch.arff

#runExperiment utahontario1_BatchTest.txt Reset
#runExperiment utahontario2_BatchTest.txt Reset

#runExperiment utahontario1_BatchTest.txt Process
#runExperiment utahontario2_BatchTest.txt Process

#Rscript --vanilla code/TestBatchBias.R matrices/utahontario1.batch.txt results/utahontario1_SelectedGenes.txt 125 clinical/combined.Batch.txt results/utahontario1_Genes_BatchBias.pdf
#Rscript --vanilla code/TestBatchBias.R matrices/utahontario2.batch.txt results/utahontario2_SelectedGenes.txt 225 clinical/combined.Batch.txt results/utahontario2_Genes_BatchBias.pdf
