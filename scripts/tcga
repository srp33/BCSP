#!/bin/bash

source scripts/create_temp_files
source scripts/exome2/paths

qsubInstalled=`command -v qsub`

if [ "$1" == "" ]
then
  echo Must specify sample subset  
  exit 0
else
  sampleSubset=$1
fi

if [ "$2" == "" ]
then
  echo Must specify sample subset group
  exit 0
else
  sampleSubsetGroup=$2
fi

fastaFile=$genomeb37FastaFile
currentDir=`pwd`
dataDir=TCGAExomeData
xmlDir=$dataDir/XmlFiles
outputDir=$dataDir/Output
natureBloodSamplesFile=Nature_Blood_Samples.txt

mkdir -p $xmlDir $outputDir $dataDir/FullBams $dataDir/ReducedBams

function parseNatureSamples {
  if [ ! -f $natureBloodSamplesFile ]
  then
    # Files downloaded from https://tcga-data.nci.nih.gov/docs/publications/brca_2012/
    tail -n +2 misc/BRCA.CGhub.bam.files.txt > $tmpFile1
    python2 code/SelectColumns.py $tmpFile1 0 $tmpFile2

    python2 code/ConvertToUnixFormat.py misc/BRCA.Barcodes.Not.at.CGHub.txt
    tail -n +2 misc/BRCA.Barcodes.Not.at.CGHub.txt > $tmpFile3
    cat $tmpFile2 $tmpFile3 > $tmpFile4

    python2 code/FilterFile.py $tmpFile4 "x[0][12:].startswith('-10')" 0 $natureBloodSamplesFile
  fi
}

function identifyHubSamples {
  if [ ! -f $dataDir/wgs_11_query_result.xml ]
  then
    cgquery -o $dataDir/wxs_10_query_result.xml -a "disease_abbr=BRCA&sample_type=10&state=live&analyte_code=D&analysis_type=REFERENCE_ALIGNMENT*&library_strategy=WXS"
    cgquery -o $dataDir/wxs_11_query_result.xml -a "disease_abbr=BRCA&sample_type=11&state=live&analyte_code=D&analysis_type=REFERENCE_ALIGNMENT*&library_strategy=WXS"
    cgquery -o $dataDir/wgs_10_query_result.xml -a "disease_abbr=BRCA&sample_type=10&state=live&analyte_code=D&analysis_type=REFERENCE_ALIGNMENT*&library_strategy=WGS"
    cgquery -o $dataDir/wgs_11_query_result.xml -a "disease_abbr=BRCA&sample_type=11&state=live&analyte_code=D&analysis_type=REFERENCE_ALIGNMENT*&library_strategy=WGS"
  fi

  queryXmlFile=$dataDir/${sampleSubset}_query_result.xml

  rm -rfv $xmlDir/$sampleSubset
  mkdir -p $xmlDir/$sampleSubset/GroupSummaries

  python2 code/SplitCgHubQueryResults.py $queryXmlFile 60 $xmlDir/$sampleSubset/GroupSummaries

  for groupSummaryFile in $xmlDir/$sampleSubset/GroupSummaries/*.xml
  do
    group=`basename $groupSummaryFile`
    group=${group/query_result_/}
    group=${group/\.xml/}

    queryXmlDir=$dataDir/XmlFiles/$sampleSubset/$group
    mkdir -p $queryXmlDir

    python2 code/SplitCgHubQueryResults.py $groupSummaryFile 1 $queryXmlDir
    renameXmlFiles $queryXmlDir
  done
}

function preprocessBams {
  counter=0

  queryXmlDir=$xmlDir/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}
  fullBamsDir=${queryXmlDir/XmlFiles/FullBams}
  reducedBamsDir=${queryXmlDir/XmlFiles/ReducedBams}
  outputDir=${queryXmlDir/XmlFiles/Output}

  mkdir -p $fullBamsDir $reducedBamsDir $outputDir

  for xmlFile in $queryXmlDir/*.xml
  do
    if [ ! -f $xmlFile ]
    then
      return
    fi

    sampleID=`basename ${xmlFile}`
    sampleID=${sampleID/\.xml/}
    fullBamFile=$fullBamsDir/$sampleID.bam
    reducedBamFile=$reducedBamsDir/$sampleID.bam
    outFile=$outputDir/$sampleID.out

    if [ -f $reducedBamFile ]
    then
      echo Reduced file already exists
      continue
    fi

    if [ -f $outFile ]
    then
      echo Output file already exists
      continue
    fi

    if [ -f $fullBamFile.downloading ]
    then
      echo $sampleID already downloading, so skipping
      continue
    fi

    let counter=counter+1
    echo Counter is $counter

    downBam $xmlFile $fullBamFile $sampleID

    if [ ! -f $fullBamFile ]
    then
      continue
    fi

    echo Processing $sampleID
    if [ "$qsubInstalled" == "" ]
    then
      scripts/exome2/gatk_pre $fullBamFile $fastaFile $genomeb37dbSnpVcfFile $entrezGeneb37BedFile $reducedBamFile $outFile &
    else
      qsub scripts/exome2/gatk_pre -l nodes=1:ppn=8:beta,pmem=4gb,walltime=48:00:00 -N process -q batch -v bamFile=$fullBamFile,genomeFastaFile=$fastaFile,knownVcfFile=$genomeb37dbSnpVcfFile,intervalsBedFile=$entrezGeneb37BedFile,outBamFile=$reducedBamFile,stdOutFile=$outFile
      #qsub scripts/exome2/gatk_pre -l nodes=1:ppn=8:beta,pmem=4gb,file=12gb,walltime=48:00:00 -N process -q batch -v bamFile=$fullBamFile,genomeFastaFile=$fastaFile,knownVcfFile=$genomeb37dbSnpVcfFile,intervalsBedFile=$entrezGeneb37BedFile,outBamFile=$reducedBamFile,stdOutFile=$outFile
    fi
  done
  wait

  rm -rvf /tmp/GeneTorrent*
}

function renameXmlFiles {
  queryXmlDir=$1

  for f in $queryXmlDir/*.xml
  do
    if [ ! -f $f ]
    then
      break
    fi

    legacyID=`python2 code/PrintXmlValue.py $f legacy_sample_id`
    legacyID=${legacyID:0:12}
    newF=$queryXmlDir/$legacyID.xml
    echo $newF

    if [ -f $newF ]
    then
      echo $newF already exists
      rm -v $f
      continue
    fi

    isInNatureFile=`grep $legacyID $natureBloodSamplesFile`
    if [ -z "$isInNatureFile" ]
    then
      rm -v $f
      continue
    fi

    mv -v $f $newF
  done
}

function downBam {
  xmlFile=$1
  outBamFile=$2
  sampleID=$3

  if [ -f $outBamFile ]
  then
    return
  fi

  echo Downloading $sampleID
  touch $outBamFile.downloading
  mkdir -p Temp/$sampleID
  GeneTorrent -v -C $HOME -d $xmlFile -c ~/mykey.pem --max-children 2 -p Temp/$sampleID
  rawFileName=`python2 code/PrintXmlValue.py $xmlFile filename`
  downBamFile=Temp/$sampleID/*/$rawFileName
  mv -v $downBamFile $outBamFile
  rm -rvf Temp/$sampleID
  rm -fv $outBamFile.downloading
}

function callVariants {
  qsub scripts/exome2/gatk_callvariants -l nodes=1:ppn=16:beta,pmem=4gb,walltime=60:00:00 -N process -q batch -v inBamFiles="$dataDir/ReducedBams/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/*.bam",genomeFastaFile=$fastaFile,dbSnpVcfFile=$genomeb37dbSnpVcfFile,glm=SNP,intervalsBedFile=$entrezGeneb37BedFile,numThreads=16,outFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/snps.vcf,stdOutFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/gatk_callsnps.out
  qsub scripts/exome2/gatk_callvariants -l nodes=1:ppn=16:beta,pmem=4gb,walltime=60:00:00 -N process -q batch -v inBamFiles="$dataDir/ReducedBams/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/*.bam",genomeFastaFile=$fastaFile,dbSnpVcfFile=$genomeb37dbSnpVcfFile,glm=INDEL,intervalsBedFile=$entrezGeneb37BedFile,numThreads=16,outFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/indels.vcf,stdOutFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/gatk_callindels.out
}

function filterVariants {
  qsub scripts/exome2/gatk_filtersnps -l nodes=1:ppn=4:beta,pmem=6gb,walltime=1:00:00 -N process -q batch -v inFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/snps.vcf,genomeFastaFile=$fastaFile,dbSnpVcfFile=$genomeb37dbSnpVcfFile,hapMapVcfFile=$genomeb37HapMapVcfFile,thousandGenomesVcfFile=$genomeb37ThousandGenomesVcfFile,outFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/snps.filtered.vcf,stdOutFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/gatk_filtersnps.out
  qsub scripts/exome2/gatk_filterindels -l nodes=1:ppn=4:beta,pmem=6gb,walltime=1:00:00 -N process -q batch -v inFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/indels.vcf,genomeFastaFile=$fastaFile,millsVcfFile=$genomeb37MillsVcfFile,outFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/indels.filtered.vcf,stdOutFile=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}/gatk_filterindels.out
}

function annotateFunction {
  outDir=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}

  scripts/exome2/annotate_function $outDir/snps.filtered.vcf GRCh37.64 TRUE $outDir/snps.annotated.function.vcf
  scripts/exome2/annotate_function $outDir/indels.filtered.vcf GRCh37.64 TRUE $outDir/indels.annotated.vcf

  scripts/exome2/annotate_function $outDir/snps.filtered.vcf GRCh37.64 FALSE $outDir/snps.annotated.function.all.vcf
  scripts/exome2/annotate_function $outDir/indels.filtered.vcf GRCh37.64 FALSE $outDir/indels.annotated.all.vcf
}

function annotateCons {
  outDir=$dataDir/Output/$sampleSubset/${sampleSubset}_${sampleSubsetGroup}

  scripts/exome2/annotate_conservation $outDir/snps.annotated.function.vcf $outDir/snps.annotated.vcf
  scripts/exome2/annotate_conservation $outDir/snps.annotated.function.all.vcf $outDir/snps.annotated.all.vcf
}

function summarize {
  # Clean up first
  rm -fv $outputDir/*/*/snps.vcf $outputDir/*/*/snps.annotated.function.vcf $outputDir/*/*/indels.vcf

  commonVariantsFiles=$thousandGenomesCommonVariantsFile,$esp6500CommonVariantsFile

  python2 code/CalculateVariantFrequencies.py "$outputDir/*/*/snps.annotated.all.vcf" $outputDir/SNP.Frequencies.txt &
  python2 code/CalculateVariantFrequencies.py "$outputDir/*/*/indels.annotated.all.vcf" $outputDir/INDEL.Frequencies.txt &
  wait

  python2 code/FilterFile.py $outputDir/SNP.Frequencies.txt "float(x[1]) == 0.0 or float(x[1]) > 0.03" 0 $tmpFile1
  python2 code/SelectColumns.py $tmpFile1 0 $outputDir/SNP.Common.txt
  python2 code/FilterFile.py $outputDir/INDEL.Frequencies.txt "float(x[1]) == 0.0 or float(x[1]) > 0.03" 0 $tmpFile1
  python2 code/SelectColumns.py $tmpFile1 0 $outputDir/INDEL.Common.txt

  for f in $outputDir/*/*/snps.annotated.all.vcf
  do
    outF=${f/\.all\.vcf/.all.filtered.vcf}
    scripts/exome2/filter_vcf $f $thousandGenomesCommonVariantsFile $outF
    scripts/exome2/filter_vcf $outF $esp6500CommonVariantsFile $outF
    scripts/exome2/filter_vcf $outF $outputDir/SNP.Common.txt $outF
  done

  for f in $outputDir/*/*/indels.annotated.all.vcf
  do
    outF=${f/\.all\.vcf/.all.filtered.vcf}
    scripts/exome2/filter_vcf $f $thousandGenomesCommonVariantsFile $outF
    scripts/exome2/filter_vcf $outF $esp6500CommonVariantsFile $outF
    scripts/exome2/filter_vcf $outF $outputDir/INDEL.Common.txt $outF
  done

  for f in $outputDir/*/*/*annotated.all.filtered.vcf
  do
    python2 code/AnnotateVcfWithGenesPathways.py $f $entrezGenePositionsFile $entrezGeneSymbolsFile $entrezGeneStrandFile genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt,genesets/Rare_BreastCancer_Susceptibility_Genes.gmt None None ${f/\.annotated\.all\.filtered\.vcf/.final.vcf} &
  done
  wait

  python2 code/ConvertVcfToVariants.py $outputDir/*/*/snps.final.vcf,$outputDir/*/*/indels.final.vcf MODERATE,HIGH $outputDir/Variants.txt $outputDir/Final.Summary.txt
  python2 code/ReplaceText.py $outputDir/Variants.txt "H_LS" "TCGA" $outputDir/Variants.txt
  python2 code/InsertColumnViaExpression.py $outputDir/Variants.txt "x[14][:12]" $tmpFile9
  cp $tmpFile9 $outputDir/Variants.txt

  python2 code/FilterFile.py $outputDir/Variants.txt "x[6] in ('472','672','675','83990','11200','4683','5728','5889','7157')" 1 $tmpFile1
  python2 code/SelectColumns.py $tmpFile1 last $tmpFile3
  tail -n +2 $tmpFile3 > $hereditarySamples
  python2 code/Uniquify.py $hereditarySamples
  python2 code/SelectColumns.py $outputDir/Variants.txt last $tmpFile3 #all samples
  tail -n +2 $tmpFile3 > $tmpFile4
  python2 code/Uniquify.py $tmpFile4
  python2 code/Subtract.py $tmpFile4 $hereditarySamples $nonHereditarySamples

  python2 code/SelectColumns.py $entrezGenePositionsFile 0 $tmpFile9
  python2 code/CountMutatedSamples.py $outputDir/Variants.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile None All None $outputDir/Gene.MutFreq.txt $outputDir/Pathway.MutFreq.txt

  python2 code/FilterFile.py $outputDir/Gene.MutFreq.txt "float(x[-1]) < 0.018" 1 $tmpFile3
  python2 code/SelectColumns.py $tmpFile3 0 $tmpFile4
  tail -n +2 $tmpFile4 > $tmpFile3
  python2 code/Uniquify.py $tmpFile3
  python2 code/FilterFileByColumnValues.py $outputDir/Variants.txt 6 $tmpFile3 1 $outputDir/Variants_Minus_TCGA_Genes.txt

  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $hereditarySamples Hereditary None $outputDir/Gene.MutFreq.Hereditary.txt $outputDir/Pathway.MutFreq.Hereditary.txt
  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $nonHereditarySamples NonHereditary None $outputDir/Gene.MutFreq.NonHereditary.txt $outputDir/Pathway.MutFreq.NonHereditary.txt
  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $youngSamples Young None $outputDir/Gene.MutFreq.Young.txt $outputDir/Pathway.MutFreq.Young.txt
  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $nonYoungSamples NonYoung None $outputDir/Gene.MutFreq.NonYoung.txt $outputDir/Pathway.MutFreq.NonYoung.txt
  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $couchHereditarySamples CouchHereditary None $outputDir/Gene.MutFreq.CouchHereditary.txt $outputDir/Pathway.MutFreq.CouchHereditary.txt
  python2 code/CountMutatedSamples.py $outputDir/Variants_Minus_TCGA_Genes.txt $tmpFile9 None genesets/c2.cp.v3.0.entrez.minuskegg.gmt,genesets/kegg.gmt $entrezGeneSymbolsFile $couchNonHereditarySamples CouchNonHereditary None $outputDir/Gene.MutFreq.CouchNonHereditary.txt $outputDir/Pathway.MutFreq.CouchNonHereditary.txt

  python2 code/CompareVariantFrequencies.py $outputDir/Gene.MutFreq.NonHereditary.txt $outputDir/Gene.MutFreq.Hereditary.txt $outputDir/Gene.MutFreq.HereditaryvsNonHereditary.Stats.txt
  python2 code/CompareVariantFrequencies.py $outputDir/Pathway.MutFreq.NonHereditary.txt $outputDir/Pathway.MutFreq.Hereditary.txt $outputDir/Pathway.MutFreq.HereditaryvsNonHereditary.Stats.txt
  python2 code/CompareVariantFrequencies.py $outputDir/Gene.MutFreq.NonYoung.txt $outputDir/Gene.MutFreq.Young.txt $outputDir/Gene.MutFreq.YoungvsNonYoung.Stats.txt
  python2 code/CompareVariantFrequencies.py $outputDir/Pathway.MutFreq.NonYoung.txt $outputDir/Pathway.MutFreq.Young.txt $outputDir/Pathway.MutFreq.YoungvsNonYoung.Stats.txt
  python2 code/CompareVariantFrequencies.py $outputDir/Gene.MutFreq.CouchNonHereditary.txt $outputDir/Gene.MutFreq.CouchHereditary.txt $outputDir/Gene.MutFreq.CouchHereditaryvsNonHereditary.Stats.txt
  python2 code/CompareVariantFrequencies.py $outputDir/Pathway.MutFreq.CouchNonHereditary.txt $outputDir/Pathway.MutFreq.CouchHereditary.txt $outputDir/Pathway.MutFreq.CouchHereditaryvsNonHereditary.Stats.txt
}

parseNatureSamples
identifyHubSamples
preprocessBams
callVariants
filterVariants
annotateFunction
annotateCons
summarize

source scripts/delete_temp_files
